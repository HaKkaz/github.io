<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HaKkaz&#39;s Blog</title>
  
  
  <link href="https://hakkaz.github.io/atom.xml" rel="self"/>
  
  <link href="https://hakkaz.github.io/"/>
  <updated>2024-03-10T17:56:34.596Z</updated>
  <id>https://hakkaz.github.io/</id>
  
  <author>
    <name>HaKkaz</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2023 大二軟體工程師實習申請慘況+AICS面試心得</title>
    <link href="https://hakkaz.github.io/2023/06/07/2023-%E5%A4%A7%E4%BA%8C%E8%BB%9F%E9%AB%94%E5%B7%A5%E7%A8%8B%E5%B8%AB%E5%AF%A6%E7%BF%92%E7%94%B3%E8%AB%8B%E6%85%98%E6%B3%81-AICS%E9%9D%A2%E8%A9%A6%E5%BF%83%E5%BE%97/"/>
    <id>https://hakkaz.github.io/2023/06/07/2023-%E5%A4%A7%E4%BA%8C%E8%BB%9F%E9%AB%94%E5%B7%A5%E7%A8%8B%E5%B8%AB%E5%AF%A6%E7%BF%92%E7%94%B3%E8%AB%8B%E6%85%98%E6%B3%81-AICS%E9%9D%A2%E8%A9%A6%E5%BF%83%E5%BE%97/</id>
    <published>2023-06-07T00:44:21.000Z</published>
    <updated>2024-03-10T17:56:34.596Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景："><a href="#背景：" class="headerlink" title="背景："></a>背景：</h2><p>履歷上面有放的東西：</p><ul><li>113 CS 學士大二</li><li>ICPC Regional Silver*2</li><li>兩個小小專案<ul><li>selenium 網路爬蟲小專案</li><li>Flask + PostgreSQL 課堂期末專案</li></ul></li><li>一次演算法助教</li><li>20 多位學生的程式家教經驗</li></ul><p>一些無用的背景（沒有在履歷上）：</p><ul><li>LeetCode 300+（所以我大概知道LeetCode難度落點）</li><li>資訊之芽 竹區算法班 講師</li></ul><h2 id="消毒"><a href="#消毒" class="headerlink" title="消毒"></a>消毒</h2><p>用HackMD排版，第一次發心得文，很醜請見諒。</p><p>本來抱持著通通沒上也很正常的心情在申請，所以基本上就是海投，很多一臉就不會錄取的公司也都投了，想說撿到面試就算賺到，所以別噴得太用力QQ。</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>個人的缺點是軟體工程開發經驗非常欠缺，除了因為打競程所以寫扣速度不差，加上因為有把專案推到 github 上所以會用 git 以外，沒有甚麼大型軟體的開發經驗; 優點則是因為我平常都有在接程式家教，所以要邊解題、邊解釋程式碼或是做法給別人聽對我來說並不困難，除非題目佔滿我的腦容量。</p><h2 id="懶人包"><a href="#懶人包" class="headerlink" title="懶人包"></a>懶人包</h2><p>全部都在二月至四月間投遞。</p><ul><li>offer get: AICS, SuDo Research Labs</li><li>婉拒面試: Advantech, 慧邦科技, Acer(PM)</li><li>感謝信: Google STEP, Yahoo, Dell, Intel, Synopsys, Appier</li><li>無聲卡: Microsoft RDI, LINE, 趨勢科技, Cadence, PChome, Nvidia, Acer(RD)</li></ul><h2 id="AICS"><a href="#AICS" class="headerlink" title="AICS"></a>AICS</h2><p>面試心得總共面了三次，每次一小時，原本聽說是兩次白板題＋一次 HR，但是我第一次可能面的太炸了所以第三次也排了白板題，然後拿到 offer 之後有約了一次 HR 的面試，但可能就不影響結果了，應該每個人也都有這關。</p><p>【OA測驗】<br>忘記是三題還是四題，基本上都只要語法就會了，大概花 10~15 分鐘。</p><p>【一面】<br>這是我第一次面試白板題所以很緊張，一上來就是一個經典的枚舉題，題目敘述、測資範圍都非常清楚明瞭，也有給範例測資，真的很用心。</p><p>因為是經典題，所以我也沒什麼思考，花了大概 1~2 分鐘把程式碼打完加上講解，面試官就直接給 follow up 了。這時候悲劇就來了，這 follow up 只是簡單的變化而已，甚至我在面試的兩週內準備資訊之芽的課才剛看完而已，但當下腦袋直接當機，過了大概 15 分鐘面試官講了兩句話的提示我才想到做法，然後又花了20分鐘在幫遞迴Debug，最後有解出來，超級可悲==。</p><p>最後剩下10~15分鐘的時候面試官問了一些履歷上的問題，然後我問了一些我能改進的地方，面試官也很耐心的指導我面試技巧。</p><p>【二面】<br>這場一上來就是一題Hard，我大概花了 5 分鐘講的八九不離十，面試官沒什麼反駁我就開始寫了，但實作腦袋一直撞到，邊寫也邊被面試官抓出一堆 bug，最後花了整整 40 分鐘才寫出來，最慘的是這題程式碼超短…</p><p>最後十分鐘我問面試官這樣是不是涼了，他說他給我的題目稍微難一點，所以還是有機會(?)<br>好險二面三面是緊接著的，不然我猜我會在二面被刷掉QQ</p><p>【三面】<br>三面的面試官貌似打過競程，一上來丟一個二維 DP，應該有 Medium 接近 hard 的難度，五分鐘內邊講邊寫解掉。接著就給了我一題很難的 follow up（應該比一般的 Hard 男不少），在面試的時候我想了 20 多分鐘，想了一個很複雜的 DP 解，最後面試官被我唬過了，其實我是假解XD</p><p>(事後我有問個 ICPC 有進 WF 的學長，他大概也花了5~10分鐘，他沒有秒解我就知道我大概是錯的了哈哈</p><p>最後 10 分鐘就是問答環節，問我比較想做前端還是後端，然後我有問面試官說他覺得我會不會上，他說機率蠻高的（？</p><p>【感想】<br>整體來說，三個面試官在我解題的時候也沒有表現出任何的不耐煩，非常有耐心的讓我問問題、聽我講解做法。最後十分鐘問的問題也都問得很細心，像是問我為什麼開始打程式比賽、為什麼要當家教、當家教學到了什麼等等…，整個面試體驗極佳，雖然網路上 AICS 的評價似乎不是很好，但以純軟 intern 來說或許在台灣選擇也不是這麼多，AICS 應該是個不錯的選擇。</p><h2 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h2><p>講了這麼多 AICS 的好話，最後選擇去 SuDo，其中一個原因是 AICS 真的太遠了，我從家裡到公司要一個多小時，而且我好像被 AICS 分到 QA Team 所以報到意願降得更低了。</p><p>從四月底 SuDo 上工到現在，很慶幸當初選擇來這邊實習，接觸、學習到了很多新知識，主管跟正職也都對實習生很好，也認識了很多好朋友！雖然目前做的事情對團隊來說非常微不足道就是了，畢竟我的實力還幫不上什麼忙，但是對我來說真的有滿滿的收穫XD</p><h2 id="感謝"><a href="#感謝" class="headerlink" title="感謝"></a>感謝</h2><p>感謝曾經發過心得文的各位，讓我在申請實習上順利了不少，也感謝在申請實習的過程中回答我許多惱人問題的學長們。</p><p>最後特別感謝抽空幫我看了無數次英文CV的女朋友&gt;&lt;。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;背景：&quot;&gt;&lt;a href=&quot;#背景：&quot; class=&quot;headerlink&quot; title=&quot;背景：&quot;&gt;&lt;/a&gt;背景：&lt;/h2&gt;&lt;p&gt;履歷上面有放的東西：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;113 CS 學士大二&lt;/li&gt;
&lt;li&gt;ICPC Regional Silver*</summary>
      
    
    
    
    <category term="生活分享" scheme="https://hakkaz.github.io/categories/%E7%94%9F%E6%B4%BB%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="生活記事" scheme="https://hakkaz.github.io/tags/%E7%94%9F%E6%B4%BB%E8%A8%98%E4%BA%8B/"/>
    
    <category term="經驗分享" scheme="https://hakkaz.github.io/tags/%E7%B6%93%E9%A9%97%E5%88%86%E4%BA%AB/"/>
    
    <category term="面試分享" scheme="https://hakkaz.github.io/tags/%E9%9D%A2%E8%A9%A6%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>學測APCS組？考好APCS就能輕鬆錄取頂大？別再聽信謠言！</title>
    <link href="https://hakkaz.github.io/2023/02/05/%E5%AD%B8%E6%B8%ACAPCS%E7%B5%84%EF%BC%9F%E8%80%83%E5%A5%BDAPCS%E5%B0%B1%E8%83%BD%E8%BC%95%E9%AC%86%E9%8C%84%E5%8F%96%E9%A0%82%E5%A4%A7%EF%BC%9F%E5%88%A5%E5%86%8D%E8%81%BD%E4%BF%A1%E8%AC%A0%E8%A8%80%EF%BC%81/"/>
    <id>https://hakkaz.github.io/2023/02/05/%E5%AD%B8%E6%B8%ACAPCS%E7%B5%84%EF%BC%9F%E8%80%83%E5%A5%BDAPCS%E5%B0%B1%E8%83%BD%E8%BC%95%E9%AC%86%E9%8C%84%E5%8F%96%E9%A0%82%E5%A4%A7%EF%BC%9F%E5%88%A5%E5%86%8D%E8%81%BD%E4%BF%A1%E8%AC%A0%E8%A8%80%EF%BC%81/</id>
    <published>2023-02-05T08:14:31.000Z</published>
    <updated>2023-02-06T06:08:20.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="作者介紹"><a href="#作者介紹" class="headerlink" title="作者介紹"></a>作者介紹</h1><hr><ul><li>110學年度以特殊選才管道錄取陽明交通大學資訊工程學系，詳細經歷請查看連結(<a href="https://hakkaz.github.io/about">https://hakkaz.github.io/about</a>)</li><li>目前於 <strong>AnnCode！安可程式</strong> 擔任 APCS 家教</li><li>APCS 實作滿級分，參加程式競賽多年、教學經驗豐富，已帶領許多學生在 APCS 取得佳績</li><li><a href="https://www.facebook.com/profile.php?id=100089378332482"><strong>AnnCode！安可程式</strong></a> 是專業 APCS 家教團隊，歡迎點擊連結了解更多！</li></ul><h1 id="什麼是「APCS大學程式先修檢測」？"><a href="#什麼是「APCS大學程式先修檢測」？" class="headerlink" title="什麼是「APCS大學程式先修檢測」？"></a>什麼是「APCS大學程式先修檢測」？</h1><hr><p>「APCS 大學程式先修檢測」是一個目前最具公信力的高中生資訊能力檢定，分為程式觀念題以及程式實作題，各占五級分，滿分十級分。自 107 年起，學測個人申請開始採計 APCS 資訊能力檢測，直至今日 112 學年共有 59 個資訊相關校系共 162 個名額參與其中，包括台灣大學資工系、陽明交通大學資工系、清華大學資工系等頂大都已確定加入。</p><h1 id="學測-APCS-組是什麼？"><a href="#學測-APCS-組是什麼？" class="headerlink" title="學測 APCS 組是什麼？"></a>學測 APCS 組是什麼？</h1><hr><p>就如同上一段所述，現在有許多資訊相關科系加開名額給予有參加 APCS 檢定的同學作為額外的入學管道，APCS 組藉由「降低學測五標門檻，增加 APCS 門檻」的方法適性楊才，挖掘對程式設計有熱忱的同學進入資工系就讀，也讓部分偏科生能以優異的資訊能力錄取理想校系。</p><p>以 112 學年度學測個人申請為例：</p><p><strong>陽明交通大學資訊工程學系乙組</strong>學測的各科門檻為：國文<font color='red'>均標</font>、英文<font color='red'>前標</font>、數Ａ<font color='red'>頂標</font>、自然<font color='red'>前標</font>。</p><p><strong>陽明交通大學資訊工程學系 APCS 組</strong>學測的各科門檻為：數Ａ<font color='red'>前標</font>、自然<font color='red'>均標</font>、<font color='red'>APCS 觀念題4級分</font>、<font color='red'>APCS 實作題4級分</font>。</p><p><img src="NYCU_APCS.png" alt="NYCU_APCS.png"></p><h1 id="頂大-APCS-組跟你想的不一樣！"><a href="#頂大-APCS-組跟你想的不一樣！" class="headerlink" title="頂大 APCS 組跟你想的不一樣！"></a>頂大 APCS 組跟你想的不一樣！</h1><hr><h2 id="補習班噱頭"><a href="#補習班噱頭" class="headerlink" title="補習班噱頭"></a>補習班噱頭</h2><p>許多補習班都會利用 APCS 申請頂大資工系做為噱頭，如「<em>APCS</em> 檢定考得好，搶下清華大學、交通大學資工科系 <em>APCS</em> 組專屬入學門票！」等等的標語讓家長及學生暈頭轉向，但頂大 APCS 組真的只要考好APCS 就能錄取嗎？</p><h2 id="頂大APCS組的真相"><a href="#頂大APCS組的真相" class="headerlink" title="頂大APCS組的真相"></a>頂大APCS組的真相</h2><p>因為 APCS 的門檻限制，幾乎所有學校的 APCS 組學測門檻及錄取分數相較同科系都會略有下降，但頂大資工系的 APCS 組雖然學測門檻略有放寬，錄取分數卻不見得有所下降，甚至在面試這關難度，堪比第二次特殊選才，許多資訊高手都會參與其中。</p><p>依照筆者的經驗，錄取清大、交大資工系 APCS 組的同學，除了 <strong>APCS 實作幾乎都是滿級分以外，多數同學都有競賽成績或是科展成績</strong>，如：資訊學科能力競賽、資訊安全競賽、科展或是旺宏科學獎等等。</p><p>另外，筆者想分享 110 學年度台大資工 APCS 組的神奇現象，當年申請台大資工 APCS 組的學測門檻居然比一般組還要高分，而且錄取的同學幾乎都有進入資訊奧林匹亞第一階段。雖然 111 學年度並沒有再次出現如此競爭的局面，不過目前<strong>台大資工 APCS 組僅有開設 3 個名額，所以同學還是要知道其困難程度並不一般。</strong></p><p>因此，想要利用 APCS 組錄取頂大資工的同學，除了 APCS 實作題以外，還要多多充實其他資訊相關的備審資料，才能讓自己立於不敗之地唷！</p><h2 id="如何挑選-APCS-補習班"><a href="#如何挑選-APCS-補習班" class="headerlink" title="如何挑選 APCS 補習班"></a>如何挑選 APCS 補習班</h2><p>現在市面上這麼多 APCS 補習班，要不是老師根本沒考過 APCS，就是連 APCS的考試方向都不清楚，因此 AnnCode！之後會再寫一篇文章與大家分享，究竟如何挑選 APCS 補習班，才可以找到足夠專業的師資，避免自己花了大把鈔票又沒有讓孩子得到應有的學習成效！</p><p>如果對 APCS、資工系特殊選才相關議題有興趣記得追蹤、按讚 <a href="https://www.facebook.com/profile.php?id=100089378332482">AnnCode！安可程式教育</a> 的臉書粉絲團！</p><h1 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h1><hr><p>文章的最後，希望讀者都能在這篇文章了解到更多關於 APCS 的相關訊息，若想要持續關注APCS以及程式解題的相關議題，歡迎追蹤 <a href="https://www.facebook.com/profile.php?id=100089378332482">AnnCode！安可程式</a> 的 FB 粉絲團。</p><h1 id="文章作者"><a href="#文章作者" class="headerlink" title="文章作者"></a>文章作者</h1><hr><p>全文由 <a href="https://www.facebook.com/profile.php?id=100089378332482">AnnCode！安可程式教育</a> 撰寫，轉載文章請註明出處並附上本文連結。</p><p><strong>AnnCode！安可程式教育</strong>是專業 APCS 家教團隊，超強師資陣容，團隊中每位老師皆為 APCS 實作滿級分高手，並且曾經參與 「TOI 高中資訊奧林匹亞競賽」、「ICPC 國際大學生程式設計競賽」等程式競賽，絕對是不可多得的一流師資。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;作者介紹&quot;&gt;&lt;a href=&quot;#作者介紹&quot; class=&quot;headerlink&quot; title=&quot;作者介紹&quot;&gt;&lt;/a&gt;作者介紹&lt;/h1&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;110學年度以特殊選才管道錄取陽明交通大學資訊工程學系，詳細經歷請查看連結(&lt;a href=&quot;http</summary>
      
    
    
    
    <category term="APCS" scheme="https://hakkaz.github.io/categories/APCS/"/>
    
    
    <category term="經驗分享" scheme="https://hakkaz.github.io/tags/%E7%B6%93%E9%A9%97%E5%88%86%E4%BA%AB/"/>
    
    <category term="APCS" scheme="https://hakkaz.github.io/tags/APCS/"/>
    
    <category term="學習歷程" scheme="https://hakkaz.github.io/tags/%E5%AD%B8%E7%BF%92%E6%AD%B7%E7%A8%8B/"/>
    
    <category term="學測申請" scheme="https://hakkaz.github.io/tags/%E5%AD%B8%E6%B8%AC%E7%94%B3%E8%AB%8B/"/>
    
  </entry>
  
  <entry>
    <title>APCS實作題練習方法，在Atcoder提升你的APCS實作！</title>
    <link href="https://hakkaz.github.io/2023/02/02/APCS%E7%B7%B4%E7%BF%92%E6%96%B9%E6%B3%95%EF%BC%8C%E4%BD%BF%E7%94%A8Atcoder%E6%8F%90%E5%8D%87APCS%E5%AF%A6%E5%8A%9B/"/>
    <id>https://hakkaz.github.io/2023/02/02/APCS%E7%B7%B4%E7%BF%92%E6%96%B9%E6%B3%95%EF%BC%8C%E4%BD%BF%E7%94%A8Atcoder%E6%8F%90%E5%8D%87APCS%E5%AF%A6%E5%8A%9B/</id>
    <published>2023-02-01T19:00:00.000Z</published>
    <updated>2024-03-10T17:58:33.201Z</updated>
    
    <content type="html"><![CDATA[<h2 id="註冊帳號"><a href="#註冊帳號" class="headerlink" title="註冊帳號"></a>註冊帳號</h2><ol><li><p>首先進入 <a href="https://atcoder.jp/">Atcoder</a> 網站。<br> <img src="https://i.imgur.com/ohoCFDp.png"></p></li><li><p>找到右上角 sign up 按鈕，點擊後填寫資料以註冊帳號。<br> <img src="https://i.imgur.com/eYZcxsu.png"></p></li></ol><h2 id="打開-Contest-List"><a href="#打開-Contest-List" class="headerlink" title="打開 Contest List"></a>打開 Contest List</h2><ol><li><p>點開左上角 Contest<br> <img src="https://i.imgur.com/q6fs2rg.png"></p></li><li><p>選擇 <strong>ABC class</strong><br> <img src="https://i.imgur.com/rbkHfoK.png"></p></li><li><p>隨便選一個 <strong>AtCoder Beginner Contest</strong> 點進去即可<br> <img src="https://i.imgur.com/EBKfZ0I.png"></p></li></ol><h2 id="刷題策略"><a href="#刷題策略" class="headerlink" title="刷題策略"></a>刷題策略</h2><ul><li><p>超級初學者</p><ul><li>還在熟悉語法、且不熟悉迴圈的同學</li><li>先寫 A 就好，也就是每一場比賽的第一題</li><li>如果每次看到 A 都能完成，可以嘗試開始寫 B</li></ul></li><li><p>APCS 實作 1~2 級分</p><ul><li>在 15 分鐘內解出 A</li><li>需要練習迴圈、陣列、流程控制的同學</li><li>寫 B~C</li><li>如果幾乎每次都能 A~C 全解，可以開始嘗試 D</li></ul></li><li><p>APCS 實作 3~4 級分</p><ul><li>在 20~30 分鐘內解出 A、B ，而且要一次 AC</li><li>嘗試解出 D~E</li><li>E 對這個程度的同學來說不簡單，不用氣餒</li><li>F 之後的題目跟 APCS 的考試方向就比較不同了，想要拚 5 級分再刷</li></ul></li></ul><h2 id="難度對照表"><a href="#難度對照表" class="headerlink" title="難度對照表"></a>難度對照表</h2><p><a href="https://kenkoooo.com/atcoder#/table">Atcoder Problems Difficulty</a><br>一個實用的網站 ，可以看到每一道題目難度大概多少。</p><p>左上角輸入自己的 User ID 可以當作 checklist 使用<br><img src="https://i.imgur.com/YVyuKdc.png"></p><h2 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h2><p>幾乎每個場次都會有解答（Editorial），但是有時候太簡單的題目不會有解答QQ。</p><p>請點選該場次的 Editorial 即可。<br><img src="https://i.imgur.com/RWqJ22X.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;註冊帳號&quot;&gt;&lt;a href=&quot;#註冊帳號&quot; class=&quot;headerlink&quot; title=&quot;註冊帳號&quot;&gt;&lt;/a&gt;註冊帳號&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;首先進入 &lt;a href=&quot;https://atcoder.jp/&quot;&gt;Atcoder&lt;/a&gt; 網站。&lt;br</summary>
      
    
    
    
    <category term="APCS" scheme="https://hakkaz.github.io/categories/APCS/"/>
    
    
    <category term="經驗分享" scheme="https://hakkaz.github.io/tags/%E7%B6%93%E9%A9%97%E5%88%86%E4%BA%AB/"/>
    
    <category term="APCS" scheme="https://hakkaz.github.io/tags/APCS/"/>
    
    <category term="Atcoder" scheme="https://hakkaz.github.io/tags/Atcoder/"/>
    
  </entry>
  
  <entry>
    <title>TIOJ 1902 「殿仁．王，不認識，誰啊？」，然後他就死了……</title>
    <link href="https://hakkaz.github.io/2021/01/18/TIOJ-1902/"/>
    <id>https://hakkaz.github.io/2021/01/18/TIOJ-1902/</id>
    <published>2021-01-18T15:19:52.000Z</published>
    <updated>2021-01-20T09:11:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>原題網址 : <a href="https://tioj.ck.tp.edu.tw/problems/1902">https://tioj.ck.tp.edu.tw/problems/1902</a></p><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>給你長度為 $N$ 的序列 $a$ 及 $Q$ 筆詢問，<br>每次詢問一個區間 $[l,r]$ ，求 $[l’,r’]$ 有最大的 $xor$ 值，且 $l \le l’ \le r’ \le r$。</p><ul><li>$[l,r]$ 的 $xor$ 值定義為區間內所有數字 $xor$ 起來。</li><li>$N,M \le 1e5$</li><li>$a_i \le 1e9$</li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="step-1"><a href="#step-1" class="headerlink" title="step 1"></a>step 1</h3><p>首先我們要先會求出 $[1,n]$ 的最大 $xor$ 值子區間。<br>我們先假設 :<br>\begin{aligned}<br> A_i = a_1 \oplus a_2 \oplus …. \oplus a_i \<br>\end{aligned}<br>利用 $xor$ 兩次會抵消的性質，我們可以用 $A_{l-1} \oplus A_r$ 來求出 $[l,r]$ 的 $xor$ 值。</p><p>接著我們套上01-字典樹(01-Trie)，然後從左到右插入$A_i$，每次利用字典樹求跟 $A_i$ 做 $xor$ 最大的值，最後取 $max$ 即是 $xor$ 值最大的子區間。</p><p>說的簡單點，我們枚舉右界然後用字典樹快速的算出每個右界$xor$值最大的子區間，然後取 $max$。</p><p>時間複雜度 : $O(NlogC)$。</p><h3 id="step-2"><a href="#step-2" class="headerlink" title="step 2"></a>step 2</h3><p>接著我們要應付 $Q$ 筆詢問了。</p><p>我一開始解題的時候思緒就一直往離線、莫隊去想，但是就是遲遲沒辦法解出來，最後只好去請求ZCK給點提示w</p><p>套上莫隊最主要的問題是我們沒辦法在擴張、縮減區間的時候好好維護答案，左右界一直不規則的亂動，我們套入 step1 的方法就要一直重新把整個區間插入字典樹一次求答案，這樣還不如不要莫隊(X)</p><p>既然我們不希望左右界一直不規則的亂動，我們就固定左界，然後讓右界單調吧。</p><p>我們先把詢問分成兩種 :</p><ol><li><font color="#6F4E37"><strong>左右界在同一塊</strong></font></li><li><font color="#6F4E37"><strong>左右界在不同一塊</strong></font></li></ol><p>對於第一種，我們直接暴力把它加入字典樹然後求得答案後再清空字典樹。<br>每次詢問費時 $O(\sqrt{N} logC)$。</p><p>對於第二種，我們把左界在同一塊的一起做處理，讓它們依照右界遞增排序，並假設 $CL$ 是這些詢問中最大的左界，我們假設 $[L,R]$ 為當前字典樹所維護的區間，並令其為 $[CL,CL-1]$ (空區間)。<br>對於每個詢問擴張右界，擴張的同時，每擴張一格就求一次 $[CL , R]$ 的答案，記得把它存起來，因為接下來的每個詢問也嚴格涵蓋這些區間的答案。</p><p><img src="image.png" alt="image"></p><p>最後我們再把每個詢問的 $[QL_i ,  CL-1]$ 依序加進Trie裡面求答案，解決本次詢問後把 $[QL_i ,  CL-1]$ 的值從 Trie拔掉。</p><h3 id="時間複雜度"><a href="#時間複雜度" class="headerlink" title="時間複雜度"></a>時間複雜度</h3><p>對於在同一塊的所有詢問最多擴張右界 $N$ 次，複雜度 $O(N log C)$ ，最多有 $\sqrt{N}$ 塊，所以擴張右界的總複雜度是 $O(N \sqrt{N} logC)$。</p><p>然後每筆詢問都要把重新把 $[QL_i , CL-1]$ 加進去又拔出來各一次，由於 $QL_i$ 跟 $CL-1$ 一定在同一塊內，所以單次操作複雜度 $O(\sqrt{N})$，總複雜度最多 $O(Q \sqrt{N}logC)$。</p><p>故總時間複雜度 : $O(N \sqrt{N} logC + Q \sqrt{N}logC)$。<br><del>(應該吧(? 有錯誤拜託告訴我&gt;&lt;’)</del></p><h2 id="AC-code"><a href="#AC-code" class="headerlink" title="AC code"></a>AC code</h2><p>有點醜的code，但不知道怎麼寫好看一點qq</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SZ(x) (int)(x).size()</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> all(x) (x).begin(),(x).end()</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IOS ios::sync_with_stdio(false),cin.tie(0),cout.tie(0);</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span>+<span class="number">50</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">query</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> l , r , bk , id;</span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(<span class="keyword">const</span> query &amp;tmp)<span class="keyword">const</span>&#123;</span><br><span class="line"><span class="keyword">return</span> bk == tmp.bk ? r &lt; tmp.r : bk &lt; tmp.bk;</span><br><span class="line">&#125;</span><br><span class="line">query()&#123;&#125;</span><br><span class="line">&#125;Qs[maxn];</span><br><span class="line"><span class="keyword">int</span> a[maxn] , ans[maxn];</span><br><span class="line"></span><br><span class="line"><span class="comment">//01-Trie</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Trie</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">Trie *nxt[<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> cnt ;</span><br><span class="line">Trie()&#123;</span><br><span class="line">nxt[<span class="number">0</span>] = nxt[<span class="number">1</span>] = <span class="literal">nullptr</span>;</span><br><span class="line">cnt = <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">Trie *now = <span class="keyword">this</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> pos = <span class="number">31</span> ; pos &gt;= <span class="number">0</span> ; --pos)&#123;</span><br><span class="line"><span class="keyword">bool</span> b = (x &gt;&gt; pos &amp; <span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(now-&gt;nxt[b] == <span class="literal">nullptr</span>) now-&gt;nxt[b] = <span class="keyword">new</span> Trie();</span><br><span class="line">now = now-&gt;nxt[b];</span><br><span class="line">now-&gt;cnt++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">Trie *now = <span class="keyword">this</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> pos = <span class="number">31</span> ; pos &gt;= <span class="number">0</span> ; --pos)&#123;</span><br><span class="line"><span class="keyword">bool</span> b = (x &gt;&gt; pos &amp; <span class="number">1</span>);</span><br><span class="line">now = now-&gt;nxt[b];</span><br><span class="line">now-&gt;cnt--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">qry</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">Trie *now = <span class="keyword">this</span>;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span> ;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> pos = <span class="number">31</span> ; pos &gt;= <span class="number">0</span> ; --pos)&#123;</span><br><span class="line"><span class="keyword">bool</span> b = (x &gt;&gt; pos &amp; <span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(now-&gt;nxt[!b] != <span class="literal">nullptr</span> &amp;&amp; now-&gt;nxt[!b]-&gt;cnt &gt; <span class="number">0</span>) </span><br><span class="line">res |= (<span class="number">1</span> &lt;&lt; pos) , now = now-&gt;nxt[!b];</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(now-&gt;nxt[b] != <span class="literal">nullptr</span> &amp;&amp; now-&gt;nxt[b]-&gt;cnt &gt; <span class="number">0</span>) </span><br><span class="line">now = now-&gt;nxt[b];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line">&#125;*rt = <span class="keyword">new</span> Trie();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">IOS;</span><br><span class="line"><span class="keyword">int</span> n , Q;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n &gt;&gt; Q;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> sn = <span class="built_in">sqrt</span>(n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span> ; i&lt;=n ; ++i) <span class="built_in">cin</span> &gt;&gt; a[i] , a[i] ^= a[i<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span> ; i&lt;Q ; ++i)&#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; Qs[i].l &gt;&gt; Qs[i].r;</span><br><span class="line">Qs[i].l--;<span class="comment">//處理區間 [l,r] 的時候可以 xor A[l-1]</span></span><br><span class="line">Qs[i].bk = Qs[i].l/sn;</span><br><span class="line">Qs[i].id = i;</span><br><span class="line">&#125;</span><br><span class="line">sort(Qs , Qs + Q);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span> ; i&lt;Q ; ++i)&#123;</span><br><span class="line"><span class="keyword">int</span> L = <span class="number">0</span> , R = <span class="number">0</span> , MX = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//把l在同一塊的丟進vector</span></span><br><span class="line"><span class="built_in">vector</span>&lt;query&gt; tmp;</span><br><span class="line">tmp.push_back(Qs[i]) , L = Qs[i].l;</span><br><span class="line"><span class="keyword">while</span>(i+<span class="number">1</span> &lt; Q &amp;&amp; Qs[i+<span class="number">1</span>].bk == Qs[i].bk)&#123;</span><br><span class="line">++i , tmp.push_back(Qs[i]) , L = max(L , Qs[i].l);</span><br><span class="line">&#125;</span><br><span class="line">R = L<span class="number">-1</span>; <span class="comment">//[CL , CL-1]</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span> ; j&lt;SZ(tmp) ; ++j)&#123;</span><br><span class="line"><span class="comment">//l,r在同一塊直接處理，然後continue</span></span><br><span class="line"><span class="keyword">if</span>(tmp[j].r/sn == tmp[j].l/sn)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=tmp[j].l ; k&lt;=tmp[j].r ; ++k)&#123;</span><br><span class="line">ans[tmp[j].id] = max(ans[tmp[j].id] , rt-&gt;qry(a[k]));</span><br><span class="line">rt-&gt;add(a[k]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=tmp[j].l ; k&lt;=tmp[j].r ; ++k)&#123;</span><br><span class="line">rt-&gt;sub(a[k]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//擴張右界</span></span><br><span class="line"><span class="keyword">while</span>(R &lt; tmp[j].r)&#123;</span><br><span class="line">++R , MX = max(MX , rt-&gt;qry(a[R])) , rt-&gt;add(a[R]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//add [QL[i] , CL-1]</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=L<span class="number">-1</span> ; k&gt;=tmp[j].l ; --k)&#123;</span><br><span class="line">ans[tmp[j].id] = max(ans[tmp[j].id] , rt-&gt;qry(a[k]));</span><br><span class="line">rt-&gt;add(a[k]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//sub [QL[i] , CL-1]</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=L<span class="number">-1</span> ; k&gt;=tmp[j].l ; --k)&#123;</span><br><span class="line">rt-&gt;sub(a[k]);</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//ans 要跟 MX 取 max</span></span><br><span class="line">ans[tmp[j].id] = max(ans[tmp[j].id] , MX);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//clear Trie</span></span><br><span class="line"><span class="keyword">while</span>(R&gt;=L) rt-&gt;sub(a[R]) , --R;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span> ; i&lt;Q ; ++i) <span class="built_in">cout</span> &lt;&lt; ans[i] &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;原題網址 : &lt;a href=&quot;https://tioj.ck.tp.edu.tw/problems/1902&quot;&gt;https://tioj.ck.tp.edu.tw/problems/1902&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#D</summary>
      
    
    
    
    <category term="競技程式" scheme="https://hakkaz.github.io/categories/%E7%AB%B6%E6%8A%80%E7%A8%8B%E5%BC%8F/"/>
    
    
    <category term="Trie" scheme="https://hakkaz.github.io/tags/Trie/"/>
    
    <category term="Competitive Programming" scheme="https://hakkaz.github.io/tags/Competitive-Programming/"/>
    
    <category term="TIOJ" scheme="https://hakkaz.github.io/tags/TIOJ/"/>
    
    <category term="Mo&#39;s algorithm" scheme="https://hakkaz.github.io/tags/Mo-s-algorithm/"/>
    
  </entry>
  
  <entry>
    <title>TIOJ 2023 吃吃為吃吃，是吃也</title>
    <link href="https://hakkaz.github.io/2021/01/15/TIOJ-2023-%E5%90%83%E5%90%83%E7%82%BA%E5%90%83%E5%90%83%EF%BC%8C%E6%98%AF%E5%90%83%E4%B9%9F/"/>
    <id>https://hakkaz.github.io/2021/01/15/TIOJ-2023-%E5%90%83%E5%90%83%E7%82%BA%E5%90%83%E5%90%83%EF%BC%8C%E6%98%AF%E5%90%83%E4%B9%9F/</id>
    <published>2021-01-14T21:22:04.000Z</published>
    <updated>2021-01-15T15:16:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>原題網址 : <a href="https://tioj.ck.tp.edu.tw/problems/2023">https://tioj.ck.tp.edu.tw/problems/2023</a></p><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>給你 $n$ 種食材以及 $m$ 種好吃度為 $v_i$ 的食材搭配方式，<br>在這 $2^n-1$ 種非空食材組合當中如果一個組合包含第 $i$ 種搭配方式就會增加 $v_i$ 的好吃度。<br>現在你要依序做 $2^n-1$ 次種組合，第 $x$ 次做的組合若好吃度為 $sum_x$ 則<strong>總好吃度</strong>增加 $x \times sum_x$。<br>求在所有製作順序中最大的<strong>總好吃度</strong>。</p><ul><li>$n \le 22$</li><li>$m \le 10^5$</li><li>$-100 \le v_i \le 100$</li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>首先我們會發現，只要求出所有組合的好吃度，再讓好吃度最小的先做就會是最大的<strong>總好吃度</strong>。<br>那問題就只剩下怎麼求出所有組合的好吃度了。</p><p>首先我想到的是一個顯然TLE的作法，對於每種組合去枚舉他的所有子集合並把好吃度加起來。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span> ; i&lt;(<span class="number">1</span>&lt;&lt;n) ; ++i)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=i ; j ; j=(j<span class="number">-1</span>)&amp;i)&#123;</span><br><span class="line">tot[i] += dp[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不過往這方向想要優化似乎是不太可能了，於是就去求助學長了XD<br>不過學長只跟我說了是分治，我想了半天也想不出來，就把 bitmask 拿去畫成樹就做出來了ww</p><p>首先我們把 $[0 , 2^n-1]$ 整個區間做分治，畫成圖如下。</p><p><img src="image.png" alt="divide and conquer"></p><p>我們會發現，如果我們把上圖每個節點分成兩半(紅線)，對於每個節點左邊第 $i$ 個 bitmask 都會是右邊第 $i$ 個 bitmask 的子集合，<br>因為左邊的已經幫我們把它涵蓋的子集合都加到它身上了，我們只要加上它就好，<br>所以我們只要讓每一層在節點右方的組合方式加上他左邊對應到的好吃度就可以得到最後每個組合的好吃度總和了。<br>(也就是箭頭右方的bitmask要加上箭頭左方bitmask當前的好吃度)</p><h2 id="AC-Code"><a href="#AC-Code" class="headerlink" title="AC Code : "></a>AC Code : </h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = (<span class="number">1</span>&lt;&lt;<span class="number">22</span>);</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> dp[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> l , <span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l == r) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">int</span> mid = (l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">solve(l , mid);</span><br><span class="line">solve(mid+<span class="number">1</span> , r);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=mid+<span class="number">1</span> ; i&lt;=r ; ++i) dp[i] += dp[l+(i-mid<span class="number">-1</span>)];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">ios::sync_with_stdio(<span class="literal">false</span>),<span class="built_in">cin</span>.tie(<span class="number">0</span>),<span class="built_in">cout</span>.tie(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">int</span> n , m ;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m ;</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line"><span class="built_in">string</span> s; </span><br><span class="line"><span class="keyword">int</span> val;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; s &gt;&gt; val;</span><br><span class="line"><span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span> ; i&lt;n ; ++i)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i] == <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">num |= (<span class="number">1</span>&lt;&lt;(n-i<span class="number">-1</span>));</span><br><span class="line">&#125;</span><br><span class="line">dp[num] = val;</span><br><span class="line">&#125;</span><br><span class="line">solve(<span class="number">0</span>,(<span class="number">1</span>&lt;&lt;n)<span class="number">-1</span>);</span><br><span class="line">sort(dp+<span class="number">1</span> , dp+(<span class="number">1</span>&lt;&lt;n));</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans = <span class="number">0ll</span> ;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span> ; i&lt;(<span class="number">1</span>&lt;&lt;n) ; ++i)&#123;</span><br><span class="line">ans += <span class="number">1ll</span> * i * dp[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;原題網址 : &lt;a href=&quot;https://tioj.ck.tp.edu.tw/problems/2023&quot;&gt;https://tioj.ck.tp.edu.tw/problems/2023&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#D</summary>
      
    
    
    
    <category term="競技程式" scheme="https://hakkaz.github.io/categories/%E7%AB%B6%E6%8A%80%E7%A8%8B%E5%BC%8F/"/>
    
    
    <category term="Competitive Programming" scheme="https://hakkaz.github.io/tags/Competitive-Programming/"/>
    
    <category term="TIOJ" scheme="https://hakkaz.github.io/tags/TIOJ/"/>
    
    <category term="Divide and Conquer" scheme="https://hakkaz.github.io/tags/Divide-and-Conquer/"/>
    
  </entry>
  
  <entry>
    <title>特殊選才 心得分享 (資訊工程學系)</title>
    <link href="https://hakkaz.github.io/2021/01/09/%E7%89%B9%E6%AE%8A%E9%81%B8%E6%9D%90-%E5%BF%83%E5%BE%97%E5%88%86%E4%BA%AB-%E8%B3%87%E8%A8%8A%E5%B7%A5%E7%A8%8B%E5%AD%B8%E7%B3%BB/"/>
    <id>https://hakkaz.github.io/2021/01/09/%E7%89%B9%E6%AE%8A%E9%81%B8%E6%9D%90-%E5%BF%83%E5%BE%97%E5%88%86%E4%BA%AB-%E8%B3%87%E8%A8%8A%E5%B7%A5%E7%A8%8B%E5%AD%B8%E7%B3%BB/</id>
    <published>2021-01-08T17:19:24.000Z</published>
    <updated>2023-02-05T09:19:46.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>在本篇作者還是高中的時候，特殊選才的相關資訊非常的少，高三時面對即將到來的面試非常不知所措，但好作者有認真準備面試以及備審資料，才得以突破重圍錄取理想校系，也因此本文想要分享給未來想要資工系特殊選才或是在 APCS 取得不錯成績的學弟妹參考。</p><h2 id="作者"><a href="#作者" class="headerlink" title="作者"></a>作者</h2><ul><li>目前於 <strong>AnnCode！安可程式</strong> 擔任 APCS 家教，詳細經歷請查看<a href="https://hakkaz.github.io/about">連結</a></li><li>APCS 實作滿級分，參加程式競賽多年、教學經驗豐富，已帶領許多學生在 APCS 取得佳績</li><li><a href="https://www.facebook.com/profile.php?id=100089378332482"><strong>AnnCode！安可程式</strong></a> 是專業 APCS 家教團隊，歡迎點擊連結了解更多！</li></ul><h2 id="結果"><a href="#結果" class="headerlink" title="結果"></a>結果</h2><p>面試結果依照面試時間排序，第一個成大資工甲組是最早面試的校系。</p><ol><li><font color="#6F4E37"><strong>成大資工甲組 備取3 (O)</strong></font></li><li><font color="#6F4E37"><strong>師大資工 備取3 (O)</strong></font></li><li><font color="#6F4E37"><strong>中央資工 備取6 (O)</strong></font></li><li><font color="#6F4E37"><strong>清大資工 正取</strong></font></li><li><font color="#6F4E37"><strong>交大資工 備取2 (O)</strong></font></li><li><del><font color="#6F4E37"><strong>清大不分系 初試未過</strong></font></del></li></ol><p>(依照面試順序排序，&#39;O&#39;代表有備取到)</p><h2 id="自我評估"><a href="#自我評估" class="headerlink" title="自我評估"></a>自我評估</h2><p><font color="#6F4E37"><strong>先大概說一下我自己的狀況，讀者在看後面的時候也比較知道參考價值高不高</strong></font></p><p>因為從高一就篤定走特選的管道，所以評估其實也只是講給讀者聽，因為不管評估如何我都還是會丟特選XD</p><p>我的在校成績非常差，全校最後一名、段考沒去考，但特殊選才大部分的校系不太在乎你的在校成績，除了聽說成大很在乎以外其他都不太在乎的樣子(?)。<br>我從進到板中的高一開始就持續在演算法競賽上努力，競賽成績截至特殊選才為止大概是同屆的前十五名，扣掉保送跟沒丟特選的人大概有第五左右。<br>另外我的個性是比較外向的，所以在面試上我也沒有太多的擔憂，更希望可以藉此彌補備審的分數(以結果來說也的確面試都比書審來的高分)。</p><p>綜上所述，感覺要上一間學校是綽綽有餘的，但就是不一定會有清交成，因為除了算法競賽以外，還有各種資訊專長的人會來特殊選才管道。</p><h2 id="備審內容"><a href="#備審內容" class="headerlink" title="備審內容 "></a>備審內容 </h2><p><font color="#6F4E37"><strong>我的得獎紀錄可以點擊 <a href="https://hakkaz.github.io/about/#%E5%BE%97%E7%8D%8E%E7%B4%80%E9%8C%84">這裡</a> 看看喔~</strong></font></p><p>我的備審完全沒有美編設計，只有白底黑字這樣的 Word 檔案，然後用紅字及粗體標示了一些自己的獎項跟關鍵字詞，我認為<strong>清交的教授應該都不會特別注重設計這方面</strong>，從初審分數跟放榜結果上應該可以反映出來，其他學校我就不確定了。</p><p>格式每間學校略有不同，但我都是複製貼上<strong>改學校名稱、申請動機</strong>而已，格式如下:</p><p><font color="#6F4E37"><strong>自傳</strong></font></p><ul><li><strong>如何啟發對資訊領域的興趣</strong></li><li><strong>如何開始自學程式</strong></li><li><strong>開始奧林匹亞的契機</strong></li><li><strong>高中重考的原因</strong></li><li><strong>得獎經歷</strong></li><li><strong>社團經歷</strong></li><li><strong>其他經歷</strong></li><li><strong>對自己的期許</strong></li></ul><p><font color="#6F4E37"><strong>申請動機</strong></font></p><ul><li><strong>各校大有不同，每間學校我都有仔細研究其優缺點</strong></li></ul><p><font color="#6F4E37"><strong>讀書計畫</strong></font></p><ul><li><strong>近程(正式錄取~大學入學)</strong></li><li><strong>中程(大學四年)</strong></li><li><strong>長程(大學畢業)</strong></li></ul><h2 id="備審準備方向"><a href="#備審準備方向" class="headerlink" title="備審準備方向"></a>備審準備方向</h2><p><strong>以下依序是我覺得資工系備審的重要內容。</strong></p><ol><li><p><font color="#6F4E37"><strong>逆境向上</strong></font><br> 這真的很重要，相信沒有人不喜歡逆境向上的人。</p></li><li><p><font color="#6F4E37"><strong>得獎紀錄、檢定成績</strong></font></p><ul><li>得獎紀錄是證明你過去的努力以及現在的能力的有力證明。</li><li>諸如：TOI 資訊奧林匹亞、APCS 程式檢定及各類英文檢定，都可以放入備審資料喔！</li></ul></li><li><p><font color="#6F4E37"><strong>自學能力</strong></font><br> 有些教授很看重自學能力，在資工系有許多知識以及技術在課堂上都不會碰到，需要自己摸索以及與同儕討論切磋。</p></li><li><p><font color="#6F4E37"><strong>附加價值</strong></font><br> 這點是學長提醒我的，我覺得很有道理，除了自身價值外，你還能帶給這間學校甚麼額外的附加價值？你有甚麼技術可以幫助到學校嗎？</p></li><li><p><font color="#6F4E37"><strong>成長經歷</strong></font><br> 簡潔有力的描寫成長經歷，可以讓教授更了解你，增加教授對你的印象以及你的備審資料的可信度。</p></li><li><p><font color="#6F4E37"><strong>其它</strong></font><br> 寫點你自己想寫的東西吧!</p></li></ol><h2 id="面試準備技巧"><a href="#面試準備技巧" class="headerlink" title="面試準備技巧"></a>面試準備技巧</h2><p><strong>我認為準備面試非常重要，即使你講的話都是真的，沒有實際演練過還是會很生疏、不流暢。除此之外，記得多報一、兩間面試時間比較早的學校練習面試！！</strong></p><p>除了一些專業問題當場教授會給你題目以外，你一定要對你備審資料有充足的了解，當然你備審裡面的內容也都得是貨真價實的才行。</p><p>我提出一些我認為很需要準備的面試問題，以我自己為例子：</p><ol><li><p>因為我高二資訊全國賽三等獎，但是高三沒得獎，所以我在去交大面試之前就已經想好要怎麼解釋自己失常了。</p></li><li><p>我的高中在校成績很差，是全校倒數的那種，所以這一定也會成為教授好奇的點。</p></li><li><p>如果你上了其他學校你會怎麼選擇? 這個世紀大難題有很多種回答方法，看你要誠實還是說謊我覺得都可以準備一下XD<br> (不過我很幸運的除了成大沒人問我這個問題)。</p></li><li><p>專業問題相關，以我打演算法競賽為例，他會問 : 最喜歡的算法? 覺得最困難的題目?</p></li></ol><p>而我準備面試的方法是在朋友面前直接練習自我介紹，先打好一些大綱，但沒有背起來，因為我覺得就算背起來一緊張也就忘光了。</p><h2 id="各校經驗分享"><a href="#各校經驗分享" class="headerlink" title="各校經驗分享"></a>各校經驗分享</h2><h3 id="成大資工甲組"><a href="#成大資工甲組" class="headerlink" title="成大資工甲組"></a>成大資工甲組</h3><p>聽說成大資工很在意在校成績，成大不希望你成績太差勁，怕收你進去你念不到畢業證書，面試的時候教授也有很明確地跟我點出資工系不是只要會寫程式就好，而教授講的也完全正確，讀資工系數學、英文也非常重要。</p><p>流程大概是:</p><ol><li><p><font color="#6F4E37"><strong>自我介紹</strong></font></p></li><li><p><font color="#6F4E37"><strong>教授問專業問題</strong></font></p><ul><li><p>第一題</p><ul><li>給定一長度為 $N$ 的數列，找出數列中的絕對眾數（保證存在）。</li><li>我當初說了 $O(NlogN)$ 的解，教授問我能不能再更好我就講了一些小優化，但實際上可以 $O(N)$ ，我當時沒想到。</li></ul></li><li><p>第二題</p><ul><li>一開始黑球白球各有五百顆在袋子中，每次拿出兩顆球不放回，如果拿出的兩顆球同色就放一顆白球回去，如果兩個不同放黑球回去，問最後剩下白球的機率（題目不是很確定）。</li><li>我完全沒有回答，我直接跟教授說我不會。</li></ul></li></ul></li><li><p><font color="#6F4E37"><strong>教授問一些關於你的問題</strong></font></p><ul><li><p>為何重考高中、重考的決心</p></li><li><p>如果比賽進展不順利怎麼辦</p></li><li><p>對大學課程瞭不瞭解</p></li><li><p>板中的競賽風氣</p></li></ul></li></ol><p>我覺得教授問的問題都挺有深度的，我很喜歡。<br>最後備取3其實沒有很意外，因為聽說我書審分數是12個進複試最低的，所以其實已經利用面試搬回不少成績了&gt;&lt;</p><h3 id="師大資工"><a href="#師大資工" class="headerlink" title="師大資工"></a>師大資工</h3><p>師大資工的面試比較沒壓力，分兩間教室，各十分鐘。</p><p>流程大概是</p><ol><li><p><font color="#6F4E37"><strong>自我介紹</strong></font></p></li><li><p><font color="#6F4E37"><strong>教授問專業問題</strong></font></p><ul><li><p>提出一個排序演算法<br>(我講Bubble sort)</p></li><li><p>指標是甚麼</p></li></ul></li><li><p><font color="#6F4E37"><strong>教授問一些關於你的問題</strong></font></p><ul><li><p>我當初重考的打算</p></li><li><p>怎麼學習程式</p></li></ul></li><li><p><font color="#6F4E37"><strong>教授要你問他們問題(關於師大)</strong></font></p><ul><li>我問說可以參加甚麼演算法相關的活動、出題、驗題</li></ul></li><li><p><font color="#6F4E37"><strong>進第二間教室後大概是相同的流程</strong></font></p></li></ol><p>聽說你成績太好他會叫你去學測的APCS組，但我沒有這個問題(X)</p><h3 id="中央資工"><a href="#中央資工" class="headerlink" title="中央資工"></a>中央資工</h3><p>聽說中央的面試順序是依照初試成績排的，我好像排第七的樣子。</p><p>面試不到10分鐘的樣子，一間教室三個教授。</p><p>面試的時候只問我有沒有考APCS跟在校成績為甚麼不好，備審上面都有寫，讓我感覺是來混薪水或是懶得看學生備審，沒有認真選才，抱歉講的不是很好聽(X)。<br>(也可能我是垃圾他們拿我濫竽充數複試人數)</p><h3 id="清大資工"><a href="#清大資工" class="headerlink" title="清大資工"></a>清大資工</h3><p>因為NPSC決賽跟面試撞期，所以我並沒有去清大面試而是在家用 Skype 面試。</p><p>教授有三位，貌似跟現場面試不同，參考價值較低。</p><p>流程如下:</p><ol><li><p><font color="#6F4E37"><strong>自我介紹</strong></font></p></li><li><p><font color="#6F4E37"><strong>專業問題</strong></font></p><ul><li><p>我被問直條圖上最大矩形面積。<br>(我先講 $O(N^2)$ 的枚舉左右界+稀疏表，再提出單調隊列 $O(N)$ 的作法)</p></li><li><p>同學被問帶權重N皇后問題<br>(位元DP 、 KM算法都可)</p></li></ul></li><li><p><font color="#6F4E37"><strong>問我NPSC相關問題</strong></font></p><ul><li>覺得難度如何</li><li>最喜歡的題目</li><li>最後名次</li></ul></li><li><p><font color="#6F4E37"><strong>未來競賽規劃</strong></font></p><ul><li>全國賽有沒有進</li><li>TOI初選</li><li>大學ICPC</li></ul></li></ol><h3 id="交大資工"><a href="#交大資工" class="headerlink" title="交大資工"></a>交大資工</h3><p>流程如下:</p><ol><li><p><font color="#6F4E37"><strong>自我介紹</strong></font></p></li><li><p><font color="#6F4E37"><strong>教授發問</strong></font></p><ul><li><p>當初重考到板中的契機</p></li><li><p>打比賽花很多時間的題目</p></li><li><p>如果遇到不會的問題會怎麼處理</p></li><li><p>有沒有做過專案</p></li><li><p>全國賽怎麼退步了</p></li><li><p>還會不會打下學期資奧初選</p></li></ul></li><li><p><font color="#6F4E37"><strong>專業問題</strong></font></p><p> 問<code>test()</code>回傳值。</p> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="title">test</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> rev = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(n &gt; <span class="number">0</span>)&#123;</span><br><span class="line">rev &lt;&lt;= <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>((n &amp; <span class="number">1</span>) == <span class="literal">true</span>)&#123;</span><br><span class="line">rev ^= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">n &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> rev;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">unsgined <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> n = <span class="number">11</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; test(n);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="各校取才方向"><a href="#各校取才方向" class="headerlink" title="各校取才方向"></a>各校取才方向</h2><ol><li>清華大學 : 演算法</li><li>交通大學 : 演算法、資安</li><li>中央大學 : <del>不清楚</del></li><li>師範大學 : 演算法、(成績不要太好)</li><li>成功大學 : 資安、科展、演算法、專案 + 成績要好一點</li></ol><p><strong>以上僅供參考，如果你有過人之處我相信無論大學選才方向如何都會看上你的!</strong></p><h2 id="給學弟妹的建議"><a href="#給學弟妹的建議" class="headerlink" title="給學弟妹的建議"></a>給學弟妹的建議</h2><p>如果你對資訊領域有<strong>熱忱</strong>，只要願意<strong>投入時間</strong>在資訊相關的領域，並且<strong>認真學習、努力</strong>，肯定會有成果的。<br>我是一個天分並不高的人，沒讀過數理資優班甚至考不上，雖然競賽成績不是很好，但是撇掉清大正取，師大成大我還是有備取到。</p><p>那我全國三等獎正取清大的例子我覺得還是看看就好，一方面我這屆許多進過資奧一階的都沒投特殊選材(大概3~到4個)，加上我認為我的面試能力挺好的，我不太會怯場，所以才能苟且正取清大。</p><h2 id="心得感想"><a href="#心得感想" class="headerlink" title="心得感想"></a>心得感想</h2><p>打從重考到錄取清大的那刻，真的可以說是一路坎坷，競賽成績不如預期、也總覺得自己不夠聰明，不過雖然坎坷卻又很快樂，每天都能研究自己喜歡的算法、寫喜歡的題目、跟同樣喜歡算法的人交流，真的是很快樂的高中生活。</p><p>不打算在這篇文講太多，等之後會發長文來講高中生活。</p><h2 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h2><p><strong>特殊選材是一條窄門，但資訊工程系的特殊選才稍微寬了一點點</strong>，並沒有想像中的困難，把目標放在清交可能困難一些也很需要運氣，但如果只是中字輩、師大甚至其他學校其實相對簡單很多。</p><p>希望每一位對資訊有興趣，或是對其它領域有興趣的學弟妹都能追尋屬於自己的夢，不要被教育體制限制發揮人生光芒的機會!</p><p><strong>另外我想說一句我一直以來都放在心上的一句話 :</strong></p><blockquote><p><strong>「玩遊戲之前，先搞清楚遊戲規則。」</strong></p></blockquote><p>我當初先研究了許多升學管道，APCS組、特殊選才、資奧薦送，才勇敢地踏上這條路搏鬥，千萬不要搞不清楚狀況就貿然行事，搞得自己最後沒大學可以念。</p><h2 id="文章作者"><a href="#文章作者" class="headerlink" title="文章作者"></a>文章作者</h2><p>全文由 <a href="https://www.facebook.com/profile.php?id=100089378332482">AnnCode！安可程式教育</a> 撰寫，轉載文章請註明出處。</p><p><strong>AnnCode！安可程式教育</strong>是專業 APCS 家教團隊，超強師資陣容，每位老師皆為 APCS 實作滿級分高手，並且曾經參與 「TOI 高中資訊奧林匹亞競賽」、「ICPC 國際大學生程式設計競賽」等程式競賽，絕對是不可多得的一流師資。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h2&gt;&lt;p&gt;在本篇作者還是高中的時候，特殊選才的相關資訊非常的少，高三時面對即將到來的面試非常不知所措，但好作者有認真準備面試以及備審資料，才得以突破重</summary>
      
    
    
    
    <category term="生活分享" scheme="https://hakkaz.github.io/categories/%E7%94%9F%E6%B4%BB%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="生活記事" scheme="https://hakkaz.github.io/tags/%E7%94%9F%E6%B4%BB%E8%A8%98%E4%BA%8B/"/>
    
    <category term="經驗分享" scheme="https://hakkaz.github.io/tags/%E7%B6%93%E9%A9%97%E5%88%86%E4%BA%AB/"/>
    
    <category term="面試分享" scheme="https://hakkaz.github.io/tags/%E9%9D%A2%E8%A9%A6%E5%88%86%E4%BA%AB/"/>
    
    <category term="APCS" scheme="https://hakkaz.github.io/tags/APCS/"/>
    
    <category term="特殊選才" scheme="https://hakkaz.github.io/tags/%E7%89%B9%E6%AE%8A%E9%81%B8%E6%89%8D/"/>
    
    <category term="資訊奧林匹亞" scheme="https://hakkaz.github.io/tags/%E8%B3%87%E8%A8%8A%E5%A5%A7%E6%9E%97%E5%8C%B9%E4%BA%9E/"/>
    
  </entry>
  
</feed>
